name: Release

on:
  workflow_call:
    inputs: {}
    secrets:
      repo_token:
        required: true
      npm_token:
        required: true

jobs:
  release:
    runs-on: ubuntu-20.04
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
      attestations: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@${{ github.repository_owner }}"

      - name: Install dependencies
        run: npm ci

      - name: Verify dependencies provenance
        run: npm audit signatures

      - name: Determine next version
        id: next-version
        env:
          GITHUB_TOKEN: ${{ secrets.repo_token }}
        run: |
          NEXT_VERSION=$(npx semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo '')
          if [ -n "$NEXT_VERSION" ]; then
            echo "Next version will be: $NEXT_VERSION"
            echo "version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "No new version to be released"
            echo "version=none" >> $GITHUB_OUTPUT
          fi

      - name: Generate tarball with next version
        if: steps.next-version.outputs.version != 'none'
        id: tarball
        run: |
          npm version ${{ steps.next-version.outputs.version }} --no-git-tag-version
          npm pack
          echo "TARBALL_NAME=$(ls *.tgz)" >> $GITHUB_OUTPUT
          git checkout package.json package-lock.json

      - name: Generate build provenance
        id: provenance
        if: steps.next-version.outputs.version != 'none'
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ github.workspace }}/${{ steps.tarball.outputs.tarball_name }}

      - name: Upload artifacts
        if: steps.next-version.outputs.version != 'none'
        uses: actions/upload-artifact@v4
        with:
          name: package-with-attestation
          path: |
            ${{ steps.tarball.outputs.tarball_name }}
            ${{ steps.provenance.outputs.bundle-path }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.repo_token }}
          NPM_TOKEN: ${{ secrets.npm_token }}
        run: npx semantic-release --dry-run --publish
