name: Build Library

on:
  workflow_call:

permissions:
  id-token: write # to enable use of OIDC for npm provenance
  attestations: write
  actions: read
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      manifest_name: ${{steps.pack.outputs.manifest_name}}
      tarball_name: ${{steps.pack.outputs.tarball_name}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Verify dependencies provenance
        run: npm audit signatures

      - name: Determine next version
        id: next-version
        env:
          GITHUB_TOKEN: ${{ secrets.repo_token }}
          IS_PR: ${{ github.event.pull_request != null }}
        run: |
          NEXT_VERSION=$(npx semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo '')
          if [ -n "$NEXT_VERSION" ]; then
            if [ "$IS_PR" = "true" ]; then
              NEXT_VERSION="${NEXT_VERSION}-dev"
            fi
            echo "Next version will be: $NEXT_VERSION"
            echo "version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "No new version to be released"
            echo "version=none" >> $GITHUB_OUTPUT
          fi

      - name: Build Library
        run: npm run build

      - name: Set new version
        if: steps.next-version.outputs.version != 'none'
        run: npm version ${{ steps.next-version.outputs.version }} --no-git-tag-version

      - name: Generate tarball with next version
        id: tarball
        run: |
          npm pack
          echo "TARBALL_NAME=$(ls *.tgz)" >> $GITHUB_OUTPUT

          npm pack --json > manifest.json
          echo "MANIFEST_NAME=manifest.json" >> $GITHUB_OUTPUT
          git checkout package.json package-lock.json

      - name: Generate build provenance
        id: provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ steps.tarball.outputs.tarball_name }}

      - run: cp ${{steps.provenance.outputs.bundle-path}} ./attestation.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-with-attestation
          path: |
            ${{ steps.tarball.outputs.manifest_name}}
            ${{ steps.tarball.outputs.tarball_name }}
            attestation.json

  test:
    needs: ["build"]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: package-with-attestation
          path: "./"

      - name: Setup NPM Project
        run: npm init -y

      - name: Install Library and Peer Dependencies
        run: npm install -S react ${{needs.build.outputs.tarball_name}}

      - run: ls -la
      - run: ls -la node_modules

      - name: Smoke Test import
        run: |
          echo "import { Button } from '@yldio/percoct-ui'" > index.mjs
          echo "const { Button } = require('@yldio/percoct-ui')" > index.js
          node index.mjs
          node index.js
